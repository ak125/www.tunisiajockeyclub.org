import {
  ExecutionContext,
  Injectable,
  UnauthorizedException,
} from '@nestjs/common';
import { AuthGuard } from '@nestjs/passport';

@Injectable()
export class TokenAuthGuard extends AuthGuard('token') {
  async canActivate(context: ExecutionContext): Promise<boolean> {
    const request = context.switchToHttp().getRequest<any>();
    
    // V√©rifier si un token est pr√©sent
    const token = request.query.token as string;
    if (!token) {
      throw new UnauthorizedException('Token de session manquant');
    }

    console.log('üîê TokenAuthGuard - Validation du token:', token);

    // Ex√©cuter la validation de la strat√©gie
    const result = (await super.canActivate(context)) as boolean;
    
    // √âtablir la session utilisateur
    if (result) {
      await super.logIn(request);
      console.log('‚úÖ Session utilisateur √©tablie');
    }
    
    return result;
  }

  handleRequest(err: any, user: any, info: any) {
    console.log('üìù TokenAuthGuard - R√©sultat:', { err, user, info });
    
    if (err || !user) {
      throw err || new UnauthorizedException('Authentification par token √©chou√©e');
    }
    
    return user;
  }
}
