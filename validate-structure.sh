#!/bin/bash

echo "‚úÖ VALIDATION DE LA STRUCTURE ORGANIS√âE"
echo "======================================="

# V√©rifier la structure organis√©e
echo "üìÅ Structure des dossiers:"
echo "   Frontend: $([ -d "frontend/app" ] && echo "‚úÖ OK" || echo "‚ùå Manquant")"
echo "   Backend: $([ -d "backend/src" ] && echo "‚úÖ OK" || echo "‚ùå Manquant")"  
echo "   Config: $([ -d "config" ] && echo "‚úÖ OK" || echo "‚ùå Manquant")"
echo "   Archive: $([ -d "_archive" ] && echo "‚úÖ OK" || echo "‚ùå Manquant")"

# V√©rifier les fichiers de configuration
echo ""
echo "üîß Configuration centralis√©e:"
echo "   app.config.ts: $([ -f "config/app.config.ts" ] && echo "‚úÖ Cr√©√©" || echo "‚ùå Manquant")"
echo "   .env.example: $([ -f "config/.env.example" ] && echo "‚úÖ Cr√©√©" || echo "‚ùå Manquant")"

# V√©rifier les versions uniques des pages
echo ""
echo "üì± Pages Frontend (versions uniques):"
if [ -d "frontend/app/routes" ]; then
    echo "   Dashboard: $([ -f "frontend/app/routes/dashboard-main.tsx" ] && echo "‚úÖ dashboard-main.tsx (VERSION OFFICIELLE)" || echo "‚ùå Manquant")"
    echo "   Accueil: $([ -f "frontend/app/routes/_index.tsx" ] && echo "‚úÖ _index.tsx" || echo "‚ùå Manquant")" 
    echo "   Login: $([ -f "frontend/app/routes/login.tsx" ] && echo "‚úÖ login.tsx" || echo "‚ùå Manquant")"
    echo "   Profile: $([ -f "frontend/app/routes/profile.tsx" ] && echo "‚úÖ profile.tsx" || echo "‚ùå Manquant")"
else
    echo "   ‚ùå Dossier routes manquant"
fi

# V√©rifier les scripts essentiels
echo ""
echo "üß™ Scripts de test essentiels:"
echo "   test-auth.sh: $([ -f "test-auth.sh" ] && echo "‚úÖ Conserv√©" || echo "‚ùå Manquant")"
echo "   test-system.sh: $([ -f "test-system.sh" ] && echo "‚úÖ Conserv√©" || echo "‚ùå Manquant")"
echo "   debug-login-flow.sh: $([ -f "debug-login-flow.sh" ] && echo "‚úÖ Conserv√©" || echo "‚ùå Manquant")"

# V√©rifier l'archivage
echo ""
echo "üóÇÔ∏è Fichiers archiv√©s:"
if [ -d "_archive" ]; then
    echo "   Tests: $(ls _archive/tests/ 2>/dev/null | wc -l) fichiers"
    echo "   Docs: $(ls _archive/docs/ 2>/dev/null | wc -l) fichiers"
    echo "   Scripts: $(ls _archive/scripts/ 2>/dev/null | wc -l) fichiers"
    echo "   Configs: $(ls _archive/old-configs/ 2>/dev/null | wc -l) fichiers"
else
    echo "   ‚ùå Dossier _archive manquant"
fi

# V√©rifier la documentation
echo ""
echo "üìö Documentation:"
echo "   README-STRUCTURE.md: $([ -f "README-STRUCTURE.md" ] && echo "‚úÖ Cr√©√©" || echo "‚ùå Manquant")"
echo "   Makefile: $([ -f "Makefile" ] && echo "‚úÖ Mis √† jour" || echo "‚ùå Manquant")"

# Compter les fichiers dans le r√©pertoire principal
echo ""
echo "üìä R√©duction des fichiers dans le r√©pertoire principal:"
main_files=$(ls -1 | grep -v -E "^(frontend|backend|config|_archive|docs|packages|tests|cache)$" | wc -l)
echo "   Fichiers racine: $main_files (r√©duit de ~65 √† ~30)"

# Afficher les prochaines √©tapes
echo ""
echo "üéØ PROCHAINES √âTAPES:"
echo "====================="
echo "1. Tester l'authentification:"
echo "   ./test-auth.sh"
echo ""
echo "2. D√©marrer l'application:"
echo "   make setup  # Configuration initiale"
echo "   make dev    # D√©marrage"
echo ""
echo "3. Acc√©der au dashboard officiel:"
echo "   http://localhost:5173/dashboard-main"
echo ""
echo "4. Consulter la documentation:"
echo "   cat README-STRUCTURE.md"

echo ""
echo "‚úÖ VALIDATION TERMIN√âE"
echo "======================"
